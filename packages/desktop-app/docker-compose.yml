version: '3.5'

services:
  web:
    image: cguo/express-webpack-react-redux-typescript-boilerplate
    build: # ignored when deploying a stack in swarm mode or kubernetes
      context: .
      args:
        - PORT=${PORT}
    ports:
      - "${PORT}:${PORT}"
    depends_on: # ignored when deploying a stack in swarm mode or kubernetes
      - postgres
      - redis
    restart: always # ignored when deploying a stack in swarm mode or kubernetes
    deploy: # ignored by docker-compose
      replicas: 3
      restart_policy:
        condition: on-failure

  postgres:
    image: postgres:alpine
    volumes:
      - ./backend/sql/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./backend/sql/data.sql:/docker-entrypoint-initdb.d/2-data.sql
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    restart: always # ignored when deploying a stack in swarm mode or kubernetes
    deploy: # ignored by docker-compose
      restart_policy:
        condition: on-failure

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - ./backend/redis-data:/data
    restart: always # ignored when deploying a stack in swarm mode or kubernetes
    deploy: # ignored by docker-compose
      restart_policy:
        condition: on-failure
    command: redis-server --appendonly yes
